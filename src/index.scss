//!! npm install node-sass@8.0  - прописывается в терминале для установки sass(css) в проект react. Для этого проверяем версию node на 
//   офиц.сайте и далее проверяем в табличке на сайте npmjs.com соответствие версии. На сегодня 8.0 соответствует версии node 18.12.1

body {
  margin: 0;
  font-family: 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',
    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',
    sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

* {
  font-family: 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',
  'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',
  sans-serif;
}

code {
  font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New',
    monospace;
}

.wrapper {
  background: #fff;
  box-shadow: 0px 10px 20px rgba(0, 0, 0, 0.04);
  border-radius: 20px;
  max-width: 1080px;
  margin: 50px auto;
}

header {
  border-bottom: 1px solid #eaeaea;
  img {
    margin-right: 15px;
  }

  h3,
  p {
    margin: 0;
  }
}

.content {
  h1 {
    margin: 0;
  }
}

/*.card {                               //весь код переносим в новый файл Card.module.scss в папку Card.
  border: 1px solid #f8f8f8;
  padding: 30px;
  width: 210px;
  border-radius: 40px;
  margin-right: 45px;
  transition: box-shadow 0.2s ease-in-out, transform 0.2s ease-in-out; // при наведении курсора появится тень с временным промежутком в 2 секунды (+ &:hover ниже:)
  cursor: pointer;                                                     // дополнительно к transform : при наведении курсора карточка "подскакивает" вверх.

  &:hover {
    box-shadow: 0px 20px 30px rgba(0, 0, 0, 0.06); // при наведении курсора появится тень (сверху 0, снизу 20, справа 30) (0.06 скорость появления тени при наведении курсора)
    transform: translateY(-5px)                      // плюс к появившейся тени карточка будет "подскакивать" немного вверх, визуально увеличиваясь в размерах. 
}

  .favourite {
    position: absolute;
    cursor: pointer;
  }

  span {
    font-size: 13px;
    opacity: 0.5;
    text-transform: uppercase;
  }

  b {
    font-size: 13px;
  }

  h5{
    font-weight: 400;
    font-size: 14px;
  }
}*/

/*.button {
  background: #fff;
  border: 1px solid #f2f2f2;
  box-sizing: border-box;
  border-radius: 8px;
  height: 32px;
  width: 32px;
  cursor: pointer;
}*/

.search-block {
  border: 1px solid #f3f3f3;
  border-radius: 10px;
  padding: 0 15px;
  position: relative;

  .clear {
    position: absolute;
    right: 0;
    width: 18px;
    height: 18px;
    top: 13px;
    right: 15px;
  }

  input {
    border: 0;
    padding: 13px;
    font-size: 16px;
    width: 200px;
  }
}

.overlay {                                // делаем корзину (+ .drawer, который ниже) совместно с html.
  position: absolute;
  left: 0;
  top: 0;
  width: 100%;
  height: 100%;
  background-color: rgba(0, 0, 0, 0.5);
  z-index: 1;
}

.drawer {                                 // делаем корзину
  display: flex;
  flex-direction: column;
  position: absolute;
  width: 420px;
  height: 100%;
  right: 0;
  background: #FFFFFF;
  box-shadow: -10px 4px 24px rgba(0, 0, 0, 0.1);
  padding: 30px; 


.items {
  flex: 1;
  overflow: auto;                             // у меня не работает, работает только scroll и то, без прокрутки
  margin-bottom: 40px;
  align-items: flex-end;
}

  h2 {
  margin: 0;
  }

}

.cartTotalBlock {                             //делаем пунктирную линию от Итого и Налог к Сумме
    
  ul {
  
    li {
      display: flex;
      align-items: flex-end;                    //опускаем пунктирную линию до уровня текст-цена (между ними)
      margin-bottom: 20px;
  

      div {
        flex: 1;                                  // flex - означает, что линия будет занимать всю ширину, которая допустима в строке
        height: 1px;
        border-bottom: 1px dashed #dfdfdf;      // dashed - пунктир 
        position: relative;                       // с помощью position: relative; и top: -4px; - делаем пунктирную линию ровно к текст-цена (между ними)
        top: -4px;
        margin: 0 7px;                            // это чтобы пунктирная линия не примыкала по краям к тексту-цене 
      }
    }
  }

  .greenButton {
    //position: relative;
    &:hover {
      img{
        transform: translateX(5px);              //эффект отхода стрелки от текста на 5px (2 шаг)
      }
    }

    img {
      position: absolute;
      right: 50px;
      top: 22px;
      transition: transform 0.2s ease-in-out;    //эффект отхода стрелки от текста на 5px (1 шаг)
    }
  }
}

  .block {
    display: flex;
    justify-content: center;
  }

  .greenButton {                                       
    width: 85%;
    position: absolute;
    height: 55px;
    background: #9DD558;
    border-radius: 18px;
    top: 850px;
    border: 0;
    color: #fff;
    font-size: 16px;
    font-weight: 500;
    cursor: pointer;
    transition: all 0.2s ease-in-out;

    &:hover {                                      
      background-color: rgb(42, 145, 68);
    }

    &:active {
      background-color: #115d7a;
    }
  
  }

  .cartEmpty {
    text-align: center;

    p{
      width: 280px;
      line-height: 24px;
    }

    .greenButton {
      width: 245px;
      margin-top: -420px;

      &:hover {
        img {
          transform: rotate(180deg) translateX(3px);
        }
      }

      img {
        position: relative;
        top: 1px;
        transform: rotate(180deg);
        margin-right: 15px;
        transition: transform 0.15s ease-in-out;
      }
    }
  }


.cartItem {                         // карточка в корзине
    border: 1px solid #f3f3f3;
    border-radius: 20px; 
    overflow: hidden;         // прописывается, чтобы картинка не выходила за края
    padding: 20px;            // чтобы в карточке все было посередине

  .cartItemImg {              // в App.js (html) изначально прописывали:<img className='mr-20' width={70} height={70} src='/img/sneakers/1.jpg' alt='sneakers'/> (после h2, 
    height: 70px;             // сразу в div, но из-за пустот вокруг картинки, прописали так:<div style={{ backgroundImage: 'url(/img/sneakers/1.jpg)' }} className='cartItemImg'></div>,
    width: 70px;              // и здесь в css добавили свойства
    background-size: contain;       //картинка повторяется несколько раз 
    background-position: 0 10px;    // ставим картинку по центру
    background-repeat: no-repeat;   //убираем повтор картинки
    margin-right: 20px;
  }

  p{
    font-size: 16px;
    margin: 0;
  }

  b{
    font-size: 14px;
  }

  .removeBtn {                     // кнопка крест при наведении курсора  (не работает, почему?)***
    opacity: 0.5;
    cursor: pointer;
    transition: opacity 0.15s ease-in-out;
  }

  &:hover {                        // кнопка крест при наведении курсора  (не работает, почему?)***
    opacity: 1;
  }

}
